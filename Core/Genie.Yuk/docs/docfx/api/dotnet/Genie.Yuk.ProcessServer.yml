### YamlMime:ManagedReference
items:
- uid: Genie.Yuk.ProcessServer
  commentId: T:Genie.Yuk.ProcessServer
  id: ProcessServer
  parent: Genie.Yuk
  children:
  - Genie.Yuk.ProcessServer.Register(System.String,Genie.Yuk.Process)
  - Genie.Yuk.ProcessServer.Resolve(System.String)
  langs:
  - csharp
  - vb
  name: ProcessServer
  nameWithType: ProcessServer
  fullName: Genie.Yuk.ProcessServer
  type: Class
  source:
    remote:
      path: Core/Genie.Yuk/Process.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: ProcessServer
    path: Process.cs
    startLine: 10
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static class ProcessServer
    content.vb: Public Module ProcessServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Genie.Yuk.ProcessServer.Register(System.String,Genie.Yuk.Process)
  commentId: M:Genie.Yuk.ProcessServer.Register(System.String,Genie.Yuk.Process)
  id: Register(System.String,Genie.Yuk.Process)
  parent: Genie.Yuk.ProcessServer
  langs:
  - csharp
  - vb
  name: Register(String, Process)
  nameWithType: ProcessServer.Register(String, Process)
  fullName: Genie.Yuk.ProcessServer.Register(System.String, Genie.Yuk.Process)
  type: Method
  source:
    remote:
      path: Core/Genie.Yuk/Process.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Register
    path: Process.cs
    startLine: 14
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static void Register(string key, Process t)
    parameters:
    - id: key
      type: System.String
    - id: t
      type: Genie.Yuk.Process
    content.vb: Public Shared Sub Register(key As String, t As Process)
  overload: Genie.Yuk.ProcessServer.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Genie.Yuk.ProcessServer.Resolve(System.String)
  commentId: M:Genie.Yuk.ProcessServer.Resolve(System.String)
  id: Resolve(System.String)
  parent: Genie.Yuk.ProcessServer
  langs:
  - csharp
  - vb
  name: Resolve(String)
  nameWithType: ProcessServer.Resolve(String)
  fullName: Genie.Yuk.ProcessServer.Resolve(System.String)
  type: Method
  source:
    remote:
      path: Core/Genie.Yuk/Process.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Resolve
    path: Process.cs
    startLine: 19
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static Process Resolve(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: Genie.Yuk.Process
    content.vb: Public Shared Function Resolve(key As String) As Process
  overload: Genie.Yuk.ProcessServer.Resolve*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Genie.Yuk
  commentId: N:Genie.Yuk
  name: Genie.Yuk
  nameWithType: Genie.Yuk
  fullName: Genie.Yuk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Genie.Yuk.ProcessServer.Register*
  commentId: Overload:Genie.Yuk.ProcessServer.Register
  name: Register
  nameWithType: ProcessServer.Register
  fullName: Genie.Yuk.ProcessServer.Register
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Genie.Yuk.Process
  commentId: T:Genie.Yuk.Process
  parent: Genie.Yuk
  name: Process
  nameWithType: Process
  fullName: Genie.Yuk.Process
- uid: Genie.Yuk.ProcessServer.Resolve*
  commentId: Overload:Genie.Yuk.ProcessServer.Resolve
  name: Resolve
  nameWithType: ProcessServer.Resolve
  fullName: Genie.Yuk.ProcessServer.Resolve
shouldSkipMarkup: true
