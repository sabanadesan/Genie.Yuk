### YamlMime:ManagedReference
items:
- uid: Genie.Yuk.Server
  commentId: T:Genie.Yuk.Server
  id: Server
  parent: Genie.Yuk
  children:
  - Genie.Yuk.Server.#ctor(System.String,Genie.Yuk.EventManager,System.String)
  - Genie.Yuk.Server.m_path
  - Genie.Yuk.Server.StartServer
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: Server
  fullName: Genie.Yuk.Server
  type: Class
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Server.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Server
    path: Genie.Core/Server.cs
    startLine: 10
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public class Server
    content.vb: Public Class Server
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Genie.Yuk.Server.m_path
  commentId: F:Genie.Yuk.Server.m_path
  id: m_path
  parent: Genie.Yuk.Server
  langs:
  - csharp
  - vb
  name: m_path
  nameWithType: Server.m_path
  fullName: Genie.Yuk.Server.m_path
  type: Field
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Server.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: m_path
    path: Genie.Core/Server.cs
    startLine: 14
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: protected string m_path
    return:
      type: System.String
    content.vb: Protected m_path As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Genie.Yuk.Server.#ctor(System.String,Genie.Yuk.EventManager,System.String)
  commentId: M:Genie.Yuk.Server.#ctor(System.String,Genie.Yuk.EventManager,System.String)
  id: '#ctor(System.String,Genie.Yuk.EventManager,System.String)'
  parent: Genie.Yuk.Server
  langs:
  - csharp
  - vb
  name: Server(String, EventManager, String)
  nameWithType: Server.Server(String, EventManager, String)
  fullName: Genie.Yuk.Server.Server(System.String, Genie.Yuk.EventManager, System.String)
  type: Constructor
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Server.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: .ctor
    path: Genie.Core/Server.cs
    startLine: 16
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public Server(string path, EventManager events = null, string IPAddress = "127.0.0.1")
    parameters:
    - id: path
      type: System.String
    - id: events
      type: Genie.Yuk.EventManager
    - id: IPAddress
      type: System.String
    content.vb: Public Sub New(path As String, events As EventManager = Nothing, IPAddress As String = "127.0.0.1")
  overload: Genie.Yuk.Server.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.Server.StartServer
  commentId: M:Genie.Yuk.Server.StartServer
  id: StartServer
  parent: Genie.Yuk.Server
  langs:
  - csharp
  - vb
  name: StartServer()
  nameWithType: Server.StartServer()
  fullName: Genie.Yuk.Server.StartServer()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Server.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: StartServer
    path: Genie.Core/Server.cs
    startLine: 33
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public void StartServer()
    content.vb: Public Sub StartServer
  overload: Genie.Yuk.Server.StartServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Genie.Yuk
  commentId: N:Genie.Yuk
  name: Genie.Yuk
  nameWithType: Genie.Yuk
  fullName: Genie.Yuk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Genie.Yuk.Server.#ctor*
  commentId: Overload:Genie.Yuk.Server.#ctor
  name: Server
  nameWithType: Server.Server
  fullName: Genie.Yuk.Server.Server
- uid: Genie.Yuk.EventManager
  commentId: T:Genie.Yuk.EventManager
  parent: Genie.Yuk
  name: EventManager
  nameWithType: EventManager
  fullName: Genie.Yuk.EventManager
- uid: Genie.Yuk.Server.StartServer*
  commentId: Overload:Genie.Yuk.Server.StartServer
  name: StartServer
  nameWithType: Server.StartServer
  fullName: Genie.Yuk.Server.StartServer
shouldSkipMarkup: true
