### YamlMime:ManagedReference
items:
- uid: Genie.Yuk.EventManager
  commentId: T:Genie.Yuk.EventManager
  id: EventManager
  parent: Genie.Yuk
  children:
  - Genie.Yuk.EventManager.#ctor
  - Genie.Yuk.EventManager.Calculate
  - Genie.Yuk.EventManager.Loop(Genie.Yuk.Event)
  - Genie.Yuk.EventManager.Start
  - Genie.Yuk.EventManager.Start(System.Object,System.Int32,System.Int32)
  - Genie.Yuk.EventManager.StartAfter
  - Genie.Yuk.EventManager.Stop
  langs:
  - csharp
  - vb
  name: EventManager
  nameWithType: EventManager
  fullName: Genie.Yuk.EventManager
  type: Class
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: EventManager
    path: Genie.Core/EventManager.cs
    startLine: 45
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public class EventManager
    content.vb: Public Class EventManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Genie.Yuk.EventManager.#ctor
  commentId: M:Genie.Yuk.EventManager.#ctor
  id: '#ctor'
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: EventManager()
  nameWithType: EventManager.EventManager()
  fullName: Genie.Yuk.EventManager.EventManager()
  type: Constructor
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: .ctor
    path: Genie.Core/EventManager.cs
    startLine: 47
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public EventManager()
    content.vb: Public Sub New
  overload: Genie.Yuk.EventManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.EventManager.Start(System.Object,System.Int32,System.Int32)
  commentId: M:Genie.Yuk.EventManager.Start(System.Object,System.Int32,System.Int32)
  id: Start(System.Object,System.Int32,System.Int32)
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: Start(Object, Int32, Int32)
  nameWithType: EventManager.Start(Object, Int32, Int32)
  fullName: Genie.Yuk.EventManager.Start(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Start
    path: Genie.Core/EventManager.cs
    startLine: 52
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public virtual void Start(object swapChainPanel, int Width, int Height)
    parameters:
    - id: swapChainPanel
      type: System.Object
    - id: Width
      type: System.Int32
    - id: Height
      type: System.Int32
    content.vb: Public Overridable Sub Start(swapChainPanel As Object, Width As Integer, Height As Integer)
  overload: Genie.Yuk.EventManager.Start*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Genie.Yuk.EventManager.Start
  commentId: M:Genie.Yuk.EventManager.Start
  id: Start
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EventManager.Start()
  fullName: Genie.Yuk.EventManager.Start()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Start
    path: Genie.Core/EventManager.cs
    startLine: 60
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public virtual void Start()
    content.vb: Public Overridable Sub Start
  overload: Genie.Yuk.EventManager.Start*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Genie.Yuk.EventManager.StartAfter
  commentId: M:Genie.Yuk.EventManager.StartAfter
  id: StartAfter
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: StartAfter()
  nameWithType: EventManager.StartAfter()
  fullName: Genie.Yuk.EventManager.StartAfter()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: StartAfter
    path: Genie.Core/EventManager.cs
    startLine: 68
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: protected void StartAfter()
    content.vb: Protected Sub StartAfter
  overload: Genie.Yuk.EventManager.StartAfter*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Genie.Yuk.EventManager.Stop
  commentId: M:Genie.Yuk.EventManager.Stop
  id: Stop
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: EventManager.Stop()
  fullName: Genie.Yuk.EventManager.Stop()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Stop
    path: Genie.Core/EventManager.cs
    startLine: 82
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Genie.Yuk.EventManager.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.EventManager.Calculate
  commentId: M:Genie.Yuk.EventManager.Calculate
  id: Calculate
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: Calculate()
  nameWithType: EventManager.Calculate()
  fullName: Genie.Yuk.EventManager.Calculate()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Calculate
    path: Genie.Core/EventManager.cs
    startLine: 87
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public void Calculate()
    content.vb: Public Sub Calculate
  overload: Genie.Yuk.EventManager.Calculate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.EventManager.Loop(Genie.Yuk.Event)
  commentId: M:Genie.Yuk.EventManager.Loop(Genie.Yuk.Event)
  id: Loop(Genie.Yuk.Event)
  parent: Genie.Yuk.EventManager
  langs:
  - csharp
  - vb
  name: Loop(Event)
  nameWithType: EventManager.Loop(Event)
  fullName: Genie.Yuk.EventManager.Loop(Genie.Yuk.Event)
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/EventManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Loop
    path: Genie.Core/EventManager.cs
    startLine: 137
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public virtual bool Loop(Event _event)
    parameters:
    - id: _event
      type: Genie.Yuk.Event
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Loop(_event As  Event) As Boolean
  overload: Genie.Yuk.EventManager.Loop*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Genie.Yuk
  commentId: N:Genie.Yuk
  name: Genie.Yuk
  nameWithType: Genie.Yuk
  fullName: Genie.Yuk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Genie.Yuk.EventManager.#ctor*
  commentId: Overload:Genie.Yuk.EventManager.#ctor
  name: EventManager
  nameWithType: EventManager.EventManager
  fullName: Genie.Yuk.EventManager.EventManager
- uid: Genie.Yuk.EventManager.Start*
  commentId: Overload:Genie.Yuk.EventManager.Start
  name: Start
  nameWithType: EventManager.Start
  fullName: Genie.Yuk.EventManager.Start
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Genie.Yuk.EventManager.StartAfter*
  commentId: Overload:Genie.Yuk.EventManager.StartAfter
  name: StartAfter
  nameWithType: EventManager.StartAfter
  fullName: Genie.Yuk.EventManager.StartAfter
- uid: Genie.Yuk.EventManager.Stop*
  commentId: Overload:Genie.Yuk.EventManager.Stop
  name: Stop
  nameWithType: EventManager.Stop
  fullName: Genie.Yuk.EventManager.Stop
- uid: Genie.Yuk.EventManager.Calculate*
  commentId: Overload:Genie.Yuk.EventManager.Calculate
  name: Calculate
  nameWithType: EventManager.Calculate
  fullName: Genie.Yuk.EventManager.Calculate
- uid: Genie.Yuk.EventManager.Loop*
  commentId: Overload:Genie.Yuk.EventManager.Loop
  name: Loop
  nameWithType: EventManager.Loop
  fullName: Genie.Yuk.EventManager.Loop
- uid: Genie.Yuk.Event
  commentId: T:Genie.Yuk.Event
  parent: Genie.Yuk
  name: Event
  nameWithType: Event
  fullName: Genie.Yuk.Event
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
