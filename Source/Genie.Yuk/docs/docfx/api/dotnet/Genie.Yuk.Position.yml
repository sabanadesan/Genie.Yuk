### YamlMime:ManagedReference
items:
- uid: Genie.Yuk.Position
  commentId: T:Genie.Yuk.Position
  id: Position
  parent: Genie.Yuk
  children:
  - Genie.Yuk.Position.#ctor(System.Double,System.Double,System.Double)
  - Genie.Yuk.Position.X
  - Genie.Yuk.Position.Y
  - Genie.Yuk.Position.Z
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Position
  fullName: Genie.Yuk.Position
  type: Struct
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Math.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Position
    path: Genie.Core/Math.cs
    startLine: 6
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public struct Position
    content.vb: Public Structure Position
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Genie.Yuk.Position.X
  commentId: F:Genie.Yuk.Position.X
  id: X
  parent: Genie.Yuk.Position
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Position.X
  fullName: Genie.Yuk.Position.X
  type: Field
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Math.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: X
    path: Genie.Core/Math.cs
    startLine: 8
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public double X
    return:
      type: System.Double
    content.vb: Public X As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.Position.Y
  commentId: F:Genie.Yuk.Position.Y
  id: Y
  parent: Genie.Yuk.Position
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Position.Y
  fullName: Genie.Yuk.Position.Y
  type: Field
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Math.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Y
    path: Genie.Core/Math.cs
    startLine: 8
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public double Y
    return:
      type: System.Double
    content.vb: Public Y As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.Position.Z
  commentId: F:Genie.Yuk.Position.Z
  id: Z
  parent: Genie.Yuk.Position
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Position.Z
  fullName: Genie.Yuk.Position.Z
  type: Field
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Math.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Z
    path: Genie.Core/Math.cs
    startLine: 8
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public double Z
    return:
      type: System.Double
    content.vb: Public Z As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Genie.Yuk.Position.#ctor(System.Double,System.Double,System.Double)
  commentId: M:Genie.Yuk.Position.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: Genie.Yuk.Position
  langs:
  - csharp
  - vb
  name: Position(Double, Double, Double)
  nameWithType: Position.Position(Double, Double, Double)
  fullName: Genie.Yuk.Position.Position(System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/Math.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: .ctor
    path: Genie.Core/Math.cs
    startLine: 10
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public Position(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: Genie.Yuk.Position.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Genie.Yuk
  commentId: N:Genie.Yuk
  name: Genie.Yuk
  nameWithType: Genie.Yuk
  fullName: Genie.Yuk
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Genie.Yuk.Position.#ctor*
  commentId: Overload:Genie.Yuk.Position.#ctor
  name: Position
  nameWithType: Position.Position
  fullName: Genie.Yuk.Position.Position
shouldSkipMarkup: true
