### YamlMime:ManagedReference
items:
- uid: Genie.Yuk.ComponentManager
  commentId: T:Genie.Yuk.ComponentManager
  id: ComponentManager
  parent: Genie.Yuk
  children:
  - Genie.Yuk.ComponentManager.Keys
  - Genie.Yuk.ComponentManager.Register(System.Guid,Genie.Yuk.Component)
  - Genie.Yuk.ComponentManager.Resolve(System.Guid)
  - Genie.Yuk.ComponentManager.Update
  langs:
  - csharp
  - vb
  name: ComponentManager
  nameWithType: ComponentManager
  fullName: Genie.Yuk.ComponentManager
  type: Class
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/ComponentManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: ComponentManager
    path: Genie.Core/ComponentManager.cs
    startLine: 7
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static class ComponentManager
    content.vb: Public Module ComponentManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Genie.Yuk.ComponentManager.Register(System.Guid,Genie.Yuk.Component)
  commentId: M:Genie.Yuk.ComponentManager.Register(System.Guid,Genie.Yuk.Component)
  id: Register(System.Guid,Genie.Yuk.Component)
  parent: Genie.Yuk.ComponentManager
  langs:
  - csharp
  - vb
  name: Register(Guid, Component)
  nameWithType: ComponentManager.Register(Guid, Component)
  fullName: Genie.Yuk.ComponentManager.Register(System.Guid, Genie.Yuk.Component)
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/ComponentManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Register
    path: Genie.Core/ComponentManager.cs
    startLine: 11
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static void Register(Guid key, Component toRegister)
    parameters:
    - id: key
      type: System.Guid
    - id: toRegister
      type: Genie.Yuk.Component
    content.vb: Public Shared Sub Register(key As Guid, toRegister As Component)
  overload: Genie.Yuk.ComponentManager.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Genie.Yuk.ComponentManager.Resolve(System.Guid)
  commentId: M:Genie.Yuk.ComponentManager.Resolve(System.Guid)
  id: Resolve(System.Guid)
  parent: Genie.Yuk.ComponentManager
  langs:
  - csharp
  - vb
  name: Resolve(Guid)
  nameWithType: ComponentManager.Resolve(Guid)
  fullName: Genie.Yuk.ComponentManager.Resolve(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/ComponentManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Resolve
    path: Genie.Core/ComponentManager.cs
    startLine: 16
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static Component Resolve(Guid key)
    parameters:
    - id: key
      type: System.Guid
    return:
      type: Genie.Yuk.Component
    content.vb: Public Shared Function Resolve(key As Guid) As Component
  overload: Genie.Yuk.ComponentManager.Resolve*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Genie.Yuk.ComponentManager.Update
  commentId: M:Genie.Yuk.ComponentManager.Update
  id: Update
  parent: Genie.Yuk.ComponentManager
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ComponentManager.Update()
  fullName: Genie.Yuk.ComponentManager.Update()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/ComponentManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Update
    path: Genie.Core/ComponentManager.cs
    startLine: 21
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static void Update()
    content.vb: Public Shared Sub Update
  overload: Genie.Yuk.ComponentManager.Update*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Genie.Yuk.ComponentManager.Keys
  commentId: M:Genie.Yuk.ComponentManager.Keys
  id: Keys
  parent: Genie.Yuk.ComponentManager
  langs:
  - csharp
  - vb
  name: Keys()
  nameWithType: ComponentManager.Keys()
  fullName: Genie.Yuk.ComponentManager.Keys()
  type: Method
  source:
    remote:
      path: Source/Genie.Yuk/Genie.Core/ComponentManager.cs
      branch: master
      repo: https://github.com/sabanadesan/Genie.Yuk.git
    id: Keys
    path: Genie.Core/ComponentManager.cs
    startLine: 32
  assemblies:
  - Genie.Yuk
  namespace: Genie.Yuk
  syntax:
    content: public static Dictionary<Guid, Component>.KeyCollection Keys()
    return:
      type: System.Collections.Generic.Dictionary{System.Guid,Genie.Yuk.Component}.KeyCollection
    content.vb: Public Shared Function Keys As Dictionary(Of Guid, Component).KeyCollection
  overload: Genie.Yuk.ComponentManager.Keys*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Genie.Yuk
  commentId: N:Genie.Yuk
  name: Genie.Yuk
  nameWithType: Genie.Yuk
  fullName: Genie.Yuk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Genie.Yuk.ComponentManager.Register*
  commentId: Overload:Genie.Yuk.ComponentManager.Register
  name: Register
  nameWithType: ComponentManager.Register
  fullName: Genie.Yuk.ComponentManager.Register
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Genie.Yuk.Component
  commentId: T:Genie.Yuk.Component
  parent: Genie.Yuk
  name: Component
  nameWithType: Component
  fullName: Genie.Yuk.Component
- uid: Genie.Yuk.ComponentManager.Resolve*
  commentId: Overload:Genie.Yuk.ComponentManager.Resolve
  name: Resolve
  nameWithType: ComponentManager.Resolve
  fullName: Genie.Yuk.ComponentManager.Resolve
- uid: Genie.Yuk.ComponentManager.Update*
  commentId: Overload:Genie.Yuk.ComponentManager.Update
  name: Update
  nameWithType: ComponentManager.Update
  fullName: Genie.Yuk.ComponentManager.Update
- uid: Genie.Yuk.ComponentManager.Keys*
  commentId: Overload:Genie.Yuk.ComponentManager.Keys
  name: Keys
  nameWithType: ComponentManager.Keys
  fullName: Genie.Yuk.ComponentManager.Keys
- uid: System.Collections.Generic.Dictionary{System.Guid,Genie.Yuk.Component}.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary{System.Guid,Genie.Yuk.Component}.KeyCollection
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2.KeyCollection
  name: Dictionary.KeyCollection<>
  nameWithType: Dictionary.KeyCollection<>
  fullName: System.Collections.Generic.Dictionary.KeyCollection<>
  nameWithType.vb: Dictionary.KeyCollection(Of )
  fullName.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )
  name.vb: Dictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection
  isExternal: true
  name: Dictionary.KeyCollection<>
  nameWithType: Dictionary.KeyCollection<>
  fullName: System.Collections.Generic.Dictionary.KeyCollection<>
  nameWithType.vb: Dictionary.KeyCollection(Of )
  fullName.vb: System.Collections.Generic.Dictionary.KeyCollection(Of )
  name.vb: Dictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: Dictionary.KeyCollection
    nameWithType: Dictionary.KeyCollection
    fullName: System.Collections.Generic.Dictionary.KeyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
